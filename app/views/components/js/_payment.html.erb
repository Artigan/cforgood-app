<script>

  $(document).ready(function() {

    // Stripe
    var stripe = Stripe("<%= ENV['STRIPE_PUBLISHABLE_KEY']%>");

    // Create an instance of Elements
    var elements = stripe.elements();

    // Custom styling can be passed to options when creating an Element.
    // (Note that this demo uses a wider set of styles than the guide below.)
    var style = {
      base: {
        color: '#32325d',
        lineHeight: '24px',
        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
        fontSmoothing: 'antialiased',
        fontSize: '16px',
        '::placeholder': {
          color: '#aab7c4'
        }
      },
      invalid: {
        color: '#fa755a',
        iconColor: '#fa755a'
      }
    };

    // Create an instance of the card Element
    var card = elements.create('card', {style: style});

    // Add an instance of the card Element into the `card-element` <div>
    card.mount('#card-element');

    // Handle real-time validation errors from the card Element.
    card.addEventListener('change', function(event) {
      var displayError = document.getElementById('card-errors');
      if (event.error) {
        displayError.textContent = event.error.message;
      } else {
        displayError.textContent = '';
      }
    });

    // Handle form submission
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function(event) {
      event.preventDefault();

      stripe.createToken(card).then(function(result) {
        console.log(result.error);
        if (result.error) {
          // Inform the user if there was an error
          var errorElement = document.getElementById('card-errors');
          errorElement.textContent = result.error.message;
        } else {
          // Send the token to your server
          stripeTokenHandler(result.token);
        }
      });
    });

    function stripeTokenHandler(token) {
      // Insert the token ID into the form so it gets submitted to the server
      var form = document.getElementById('payment-form');
      var hiddenInput = document.createElement('input');
      hiddenInput.setAttribute('type', 'hidden');
      hiddenInput.setAttribute('name', 'stripeToken');
      hiddenInput.setAttribute('value', token.id);
      form.appendChild(hiddenInput);

      // Submit the form
      form.submit();
    }


    // Navigation
    $(".signup-payment .signup-prev").on("click", function(e) {
      e.preventDefault;
      $(".signup-payment").removeClass("slideup").addClass("ishidden");
      $(".signup-plan").removeClass("ishidden").addClass("slidedown");
      $("#signup-breadcrumb").removeClass("slide-3");
      if (!$('.message-subscription').hasClass('hidden')) {
        $('.message-subscription').addClass('hidden');
        $(".rollback_code_partner").click();
      }

      // EVENT AMPLITUDE : USER_C_SIGNUP1_NEXT
      amplitude.logEvent('USER_C_SIGNUP3_PREV');
    });

    $(".btn-create-card").on("click", function() {
      <% if controller_path == "member/dashboard" %>
        // EVENT AMPLITUDE : USER_C_PROFILE_MYSUBSCRIPTION_VALIDATED
        amplitude.logEvent('USER_C_PROFILE_MYSUBSCRIPTION_VALIDATED');
      <% else %>
        // EVENT AMPLITUDE : USER_C_SIGNUP3_VALIDATED
        amplitude.logEvent('USER_C_SIGNUP3_VALIDATED');
      <% end %>
    });

    $(".btn-no-bank-details").on("click", function() {
      <% if controller_path == "member/dashboard" %>
        // EVENT AMPLITUDE : USER_C_PROFILE_MYSUBSCRIPTION_KO
        amplitude.logEvent('USER_C_PROFILE_MYBANK_DETAILS_LATER');
      <% else %>
        // EVENT AMPLITUDE : USER_C_SIGNUP2_KO
        amplitude.logEvent('USER_C_SIGNUP3_LATER');
      <% end %>
    });
  });

</script>
