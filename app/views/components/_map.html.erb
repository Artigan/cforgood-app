<script>

  var geoJson = <%= raw(@geojson.to_json) %>;

console.log(geoJson);
  // L.mapbox.accessToken = 'pk.eyJ1IjoiZnJlZHBldHJpcyIsImEiOiJjaWtoem9qd2IwMDJmdnBtNmZ0Y29zcG5sIn0.atyCUDfyMaoUauNY1diwtQ';

  // var mapboxTiles = L.tileLayer('https://api.mapbox.com/v4/mapbox.streets/{z}/{x}/{y}.png?access_token=' + L.mapbox.accessToken, {
  //   attribution: '<a href="http://www.mapbox.com/about/maps/" target="_blank">Terms &amp; Feedback</a>'
  // });

  // var map = L.map('map-dashboard')
  //     .addLayer(mapboxTiles)
  //     .setView(["<%= current_user.latitude %>", "<%= current_user.longitude %>"], 14);

  //   // New Layer
  //   var mapLayer = L.mapbox.featureLayer().addTo(map);

  //   // Set a custom icon on each marker based on feature properties
  //   mapLayer.on('layeradd', function(e) {
  //     var marker = e.layer,
  //         feature = marker.feature;
  //     marker.setIcon(L.icon(feature.properties.icon));
  //     marker.bindPopup(feature.properties.popupContent,{
  //       closeButton: true
  //     });
  //   });

  //   // Center on marker click
  //   // mapLayer.on('click', function(e) {
  //   //   map.panTo(e.layer.getLatLng());
  //   // });

  //   // Add features to the map
  //   mapLayer.setGeoJSON(geoJson);

  //   //Fit around the markers of the map
  //   map.fitBounds(mapLayer.getBounds());


  ///// MAPBOXGL //////
//////

  mapboxgl.accessToken = 'pk.eyJ1IjoiZnJlZHBldHJpcyIsImEiOiJjaWtoem9qd2IwMDJmdnBtNmZ0Y29zcG5sIn0.atyCUDfyMaoUauNY1diwtQ';
  var map = new mapboxgl.Map({
      container: 'map-dashboard',
      style: 'mapbox://styles/mapbox/streets-v8',
      center: ["<%= current_user.longitude %>", "<%= current_user.latitude %>"],
      zoom: 12
  });

  map.on('style.load', function () {
      map.addSource("markers", {
          "type": "geojson",
          "data": geoJson
      });

      map.addLayer({
          "id": "markers",
          "type": "symbol",
          "source": "markers",
          "interactive": true,
          "layout": {
              "icon-image": "{marker-symbol}-15"
              // "text-field": "{title}",
              // "text-font": ["Open Sans Semibold", "Arial Unicode MS Bold"],
              // "text-offset": [0, 0.6],
              // "text-anchor": "top"
          }
      });
  });

  // //Create a popup, but don't add it to the map yet.
  // var popup = new mapboxgl.Popup({
  //     closeButton: false,
  //     closeOnClick: false,
  //     anchor: "bottom",
  // });

  // map.on('mousemove', function (e) {
  //     map.featuresAt(e.point, {
  //         radius: 5, // Half the marker size (15px).
  //         includeGeometry: true,
  //         layer: 'markers'
  //     }, function (err, features) {
  //         // Change the cursor style as a UI indicator.
  //         map.getCanvas().style.cursor = (!err && features.length) ? 'pointer' : '';

  //         if (err || !features.length) {
  //             popup.remove();
  //             return;
  //         }

  //         var feature = features[0];

  //         // Initialize a popup and set its coordinates
  //         // based on the feature found.
  //         map.flyTo({center: features[0].geometry.coordinates});
  //         popup.setLngLat(feature.geometry.coordinates)
  //             .setHTML(feature.properties.description)
  //             .addTo(map);
  //     });
  // });

  // When a click event occurs near a marker icon, open a popup at the location of
  // the feature, with description HTML from its properties.
  map.on('click', function (e) {

    map.featuresAt(e.point, {layer: 'markers', radius: 10, includeGeometry: true}, function (err, features) {

        if (err || !features.length)
            return;

        var feature = features[0];
        var coordinates = features[0].geometry.coordinates;
        console.log(coordinates);
        // Get coordinates from the symbol and center the map on those coordinates
        map.flyTo({center: [coordinates[0],coordinates[1]-0.012]});
        new mapboxgl
          .Popup({
              closeButton: false,
              closeOnClick: true,
              anchor: "bottom"})
          .setLngLat(feature.geometry.coordinates)
          .setHTML(feature.properties.description)
          .addTo(map);
    });
  });

  // Use the same approach as above to indicate that the symbols are clickable
  // by changing the cursor style to 'pointer'.
  // map.on('mousemove', function (e) {
  //     map.featuresAt(e.point, {layer: 'markers', radius: 10}, function (err, features) {
  //         map.getCanvas().style.cursor = (!err && features.length) ? 'pointer' : '';
  //     });
  // });




</script>
